Index: src/screen/interfaces/Screen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/screen/interfaces/Screen.java b/src/main/java/com/screen/interfaces/Screen.java
rename from src/screen/interfaces/Screen.java
rename to src/main/java/com/screen/interfaces/Screen.java
--- a/src/screen/interfaces/Screen.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/screen/interfaces/Screen.java	(date 1731580057214)
@@ -1,4 +1,4 @@
-package src.screen.interfaces;
+package com.screen.interfaces;
 
 public interface Screen {
     void initialize();
Index: src/main/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/Main.java b/src/main/java/com/app/Main.java
rename from src/main/Main.java
rename to src/main/java/com/app/Main.java
--- a/src/main/Main.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/app/Main.java	(date 1731580057161)
@@ -1,4 +1,4 @@
-package src.main;
+package com.app;
 
 public class Main {
     public static void main(String[] args) {
Index: src/player/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/player/Player.java b/src/main/java/com/player/Player.java
rename from src/player/Player.java
rename to src/main/java/com/player/Player.java
--- a/src/player/Player.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/player/Player.java	(date 1731580057197)
@@ -1,7 +1,7 @@
-package src.player;
+package com.player;
 
-import src.item.interfaces.Item;
-import src.item.Sword;
+import com.item.Sword;
+import com.item.interfaces.Item;
 
 import java.util.ArrayList;
 
Index: src/screen/LoadScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/screen/LoadScreen.java b/src/main/java/com/screen/LoadScreen.java
rename from src/screen/LoadScreen.java
rename to src/main/java/com/screen/LoadScreen.java
--- a/src/screen/LoadScreen.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/screen/LoadScreen.java	(date 1731584079108)
@@ -1,7 +1,7 @@
-package src.screen;
+package com.screen;
 
-import src.screen.interfaces.Screen;
-import src.main.MainController;
+import com.app.MainController;
+import com.screen.interfaces.Screen;
 
 import javax.swing.*;
 
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\"==\"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n@rem This is normally unused\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif %ERRORLEVEL% equ 0 goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif %ERRORLEVEL% equ 0 goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nset EXIT_CODE=%ERRORLEVEL%\r\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\r\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\r\nexit /b %EXIT_CODE%\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew.bat b/gradlew.bat
--- a/gradlew.bat	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/gradlew.bat	(date 1731574894806)
@@ -13,6 +13,8 @@
 @rem See the License for the specific language governing permissions and
 @rem limitations under the License.
 @rem
+@rem SPDX-License-Identifier: Apache-2.0
+@rem
 
 @if "%DEBUG%"=="" @echo off
 @rem ##########################################################################
@@ -43,11 +45,11 @@
 %JAVA_EXE% -version >NUL 2>&1
 if %ERRORLEVEL% equ 0 goto execute
 
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
+echo. 1>&2
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2
+echo. 1>&2
+echo Please set the JAVA_HOME variable in your environment to match the 1>&2
+echo location of your Java installation. 1>&2
 
 goto fail
 
@@ -57,11 +59,11 @@
 
 if exist "%JAVA_EXE%" goto execute
 
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
+echo. 1>&2
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2
+echo. 1>&2
+echo Please set the JAVA_HOME variable in your environment to match the 1>&2
+echo location of your Java installation. 1>&2
 
 goto fail
 
Index: src/screen/InventoryScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/screen/InventoryScreen.java b/src/main/java/com/screen/InventoryScreen.java
rename from src/screen/InventoryScreen.java
rename to src/main/java/com/screen/InventoryScreen.java
--- a/src/screen/InventoryScreen.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/screen/InventoryScreen.java	(date 1731580057174)
@@ -1,10 +1,11 @@
-package src.screen;
+package com.screen;
 
-import src.main.MainController;
-import src.screen.interfaces.Screen;
+import com.app.MainController;
 
 import javax.swing.*;
 
+import com.screen.interfaces.Screen;
+
 public class InventoryScreen extends JPanel implements Screen {
 
     private MainController mainController;
Index: src/screen/GameScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/screen/GameScreen.java b/src/main/java/com/screen/GameScreen.java
rename from src/screen/GameScreen.java
rename to src/main/java/com/screen/GameScreen.java
--- a/src/screen/GameScreen.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/screen/GameScreen.java	(date 1731584069749)
@@ -1,7 +1,7 @@
-package src.screen;
+package com.screen;
 
-import src.screen.interfaces.Screen;
-import src.main.MainController;
+import com.app.MainController;
+import com.screen.interfaces.Screen;
 
 import javax.swing.*;
 
Index: src/screen/StatisticsScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/screen/StatisticsScreen.java b/src/main/java/com/screen/StatisticsScreen.java
rename from src/screen/StatisticsScreen.java
rename to src/main/java/com/screen/StatisticsScreen.java
--- a/src/screen/StatisticsScreen.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/screen/StatisticsScreen.java	(date 1731584158822)
@@ -1,14 +1,13 @@
-package src.screen;
+package com.screen;
 
-import src.item.Sword;
-import src.screen.interfaces.Screen;
-import src.main.MainController;
 
 import javax.swing.*;
 import javax.swing.table.DefaultTableModel;
 import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
+import com.app.MainController;
+import com.screen.interfaces.Screen;
 
 public class StatisticsScreen extends JPanel implements Screen {
 
Index: src/main/MainController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/MainController.java b/src/main/java/com/app/MainController.java
rename from src/main/MainController.java
rename to src/main/java/com/app/MainController.java
--- a/src/main/MainController.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/app/MainController.java	(date 1731580647794)
@@ -1,14 +1,17 @@
-package src.main;
+package com.app;
 
-import src.screen.*;
-import src.screen.interfaces.Screen;
+
+import org.json.JSONObject;
+import com.screen.*;
+import com.screen.interfaces.Screen;
 
 import javax.swing.*;
 import java.awt.*;
+import java.io.BufferedReader;
+import java.io.FileReader;
 import java.util.HashMap;
 import java.util.Map;
 
-
 public class MainController extends JFrame {
     private CardLayout cardLayout;
     private JPanel mainPanel;
@@ -35,7 +38,7 @@
     }
 
     private void addScreen(String name, Screen screen) {
-        screens.put(name, screen); // Map에 화면 추가
+        screens.put(name, screen); // Ma
         mainPanel.add((Component) screen, name); // CardLayout에 화면 추가
     }
 
@@ -51,6 +54,28 @@
         cardLayout.show(mainPanel, screenName);
     }
 
+    public JSONObject loadJson(String path) {
+
+
+
+        // 지정된 경로에서 JSON 파일을 로드
+        try (BufferedReader reader = new BufferedReader(new FileReader(path))) {
+            StringBuilder jsonText = new StringBuilder();
+            String line;
+            while ((line = reader.readLine()) != null) {
+                jsonText.append(line);
+            }
+
+            // JSON 텍스트를 JSONObject로 변환
+            return new JSONObject(jsonText.toString());
+
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+
     public void loadSettingData() {
     }
 
Index: src/screen/ResetScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/screen/ResetScreen.java b/src/main/java/com/screen/ResetScreen.java
rename from src/screen/ResetScreen.java
rename to src/main/java/com/screen/ResetScreen.java
--- a/src/screen/ResetScreen.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/screen/ResetScreen.java	(date 1731580057193)
@@ -1,10 +1,13 @@
-package src.screen;
+package com.screen;
+
 
-import src.main.MainController;
-import src.screen.interfaces.Screen;
+
+import com.app.MainController;
 
 import javax.swing.*;
 
+import com.screen.interfaces.Screen;
+
 public class ResetScreen extends JPanel implements Screen {
 
     private MainController mainController;
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/bin/sh\r\n\r\n#\r\n# Copyright © 2015-2021 the original authors.\r\n#\r\n# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n# you may not use this file except in compliance with the License.\r\n# You may obtain a copy of the License at\r\n#\r\n#      https://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n# Unless required by applicable law or agreed to in writing, software\r\n# distributed under the License is distributed on an \"AS IS\" BASIS,\r\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n# See the License for the specific language governing permissions and\r\n# limitations under the License.\r\n#\r\n\r\n##############################################################################\r\n#\r\n#   Gradle start up script for POSIX generated by Gradle.\r\n#\r\n#   Important for running:\r\n#\r\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\r\n#       noncompliant, but you have some other compliant shell such as ksh or\r\n#       bash, then to run this script, type that shell name before the whole\r\n#       command line, like:\r\n#\r\n#           ksh Gradle\r\n#\r\n#       Busybox and similar reduced shells will NOT work, because this script\r\n#       requires all of these POSIX shell features:\r\n#         * functions;\r\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\r\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\r\n#         * compound commands having a testable exit status, especially «case»;\r\n#         * various built-in commands including «command», «set», and «ulimit».\r\n#\r\n#   Important for patching:\r\n#\r\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\r\n#       by Bash, Ksh, etc; in particular arrays are avoided.\r\n#\r\n#       The \"traditional\" practice of packing multiple parameters into a\r\n#       space-separated string is a well documented source of bugs and security\r\n#       problems, so this is (mostly) avoided, by progressively accumulating\r\n#       options in \"$@\", and eventually passing that to Java.\r\n#\r\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\r\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\r\n#       see the in-line comments for details.\r\n#\r\n#       There are tweaks for specific operating systems such as AIX, CygWin,\r\n#       Darwin, MinGW, and NonStop.\r\n#\r\n#   (3) This script is generated from the Groovy template\r\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\r\n#       within the Gradle project.\r\n#\r\n#       You can find Gradle at https://github.com/gradle/gradle/.\r\n#\r\n##############################################################################\r\n\r\n# Attempt to set APP_HOME\r\n\r\n# Resolve links: $0 may be a link\r\napp_path=$0\r\n\r\n# Need this for daisy-chained symlinks.\r\nwhile\r\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\r\n    [ -h \"$app_path\" ]\r\ndo\r\n    ls=$( ls -ld \"$app_path\" )\r\n    link=${ls#*' -> '}\r\n    case $link in             #(\r\n      /*)   app_path=$link ;; #(\r\n      *)    app_path=$APP_HOME$link ;;\r\n    esac\r\ndone\r\n\r\n# This is normally unused\r\n# shellcheck disable=SC2034\r\nAPP_BASE_NAME=${0##*/}\r\nAPP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\r\n\r\n# Use the maximum available, or set MAX_FD != -1 to use that value.\r\nMAX_FD=maximum\r\n\r\nwarn () {\r\n    echo \"$*\"\r\n} >&2\r\n\r\ndie () {\r\n    echo\r\n    echo \"$*\"\r\n    echo\r\n    exit 1\r\n} >&2\r\n\r\n# OS specific support (must be 'true' or 'false').\r\ncygwin=false\r\nmsys=false\r\ndarwin=false\r\nnonstop=false\r\ncase \"$( uname )\" in                #(\r\n  CYGWIN* )         cygwin=true  ;; #(\r\n  Darwin* )         darwin=true  ;; #(\r\n  MSYS* | MINGW* )  msys=true    ;; #(\r\n  NONSTOP* )        nonstop=true ;;\r\nesac\r\n\r\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\r\n\r\n\r\n# Determine the Java command to use to start the JVM.\r\nif [ -n \"$JAVA_HOME\" ] ; then\r\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\r\n        # IBM's JDK on AIX uses strange locations for the executables\r\n        JAVACMD=$JAVA_HOME/jre/sh/java\r\n    else\r\n        JAVACMD=$JAVA_HOME/bin/java\r\n    fi\r\n    if [ ! -x \"$JAVACMD\" ] ; then\r\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\r\n\r\nPlease set the JAVA_HOME variable in your environment to match the\r\nlocation of your Java installation.\"\r\n    fi\r\nelse\r\n    JAVACMD=java\r\n    if ! command -v java >/dev/null 2>&1\r\n    then\r\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n\r\nPlease set the JAVA_HOME variable in your environment to match the\r\nlocation of your Java installation.\"\r\n    fi\r\nfi\r\n\r\n# Increase the maximum file descriptors if we can.\r\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\r\n    case $MAX_FD in #(\r\n      max*)\r\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\r\n        # shellcheck disable=SC3045\r\n        MAX_FD=$( ulimit -H -n ) ||\r\n            warn \"Could not query maximum file descriptor limit\"\r\n    esac\r\n    case $MAX_FD in  #(\r\n      '' | soft) :;; #(\r\n      *)\r\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\r\n        # shellcheck disable=SC3045\r\n        ulimit -n \"$MAX_FD\" ||\r\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\r\n    esac\r\nfi\r\n\r\n# Collect all arguments for the java command, stacking in reverse order:\r\n#   * args from the command line\r\n#   * the main class name\r\n#   * -classpath\r\n#   * -D...appname settings\r\n#   * --module-path (only if needed)\r\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\r\n\r\n# For Cygwin or MSYS, switch paths to Windows format before running java\r\nif \"$cygwin\" || \"$msys\" ; then\r\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\r\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\r\n\r\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\r\n\r\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\r\n    for arg do\r\n        if\r\n            case $arg in                                #(\r\n              -*)   false ;;                            # don't mess with options #(\r\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\r\n                    [ -e \"$t\" ] ;;                      #(\r\n              *)    false ;;\r\n            esac\r\n        then\r\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\r\n        fi\r\n        # Roll the args list around exactly as many times as the number of\r\n        # args, so each arg winds up back in the position where it started, but\r\n        # possibly modified.\r\n        #\r\n        # NB: a `for` loop captures its iteration list before it begins, so\r\n        # changing the positional parameters here affects neither the number of\r\n        # iterations, nor the values presented in `arg`.\r\n        shift                   # remove old arg\r\n        set -- \"$@\" \"$arg\"      # push replacement arg\r\n    done\r\nfi\r\n\r\n\r\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\r\n\r\n# Collect all arguments for the java command;\r\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\r\n#     shell script including quotes and variable substitutions, so put them in\r\n#     double quotes to make sure that they get re-expanded; and\r\n#   * put everything else in single quotes, so that it's not re-expanded.\r\n\r\nset -- \\\r\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\r\n        -classpath \"$CLASSPATH\" \\\r\n        org.gradle.wrapper.GradleWrapperMain \\\r\n        \"$@\"\r\n\r\n# Stop when \"xargs\" is not available.\r\nif ! command -v xargs >/dev/null 2>&1\r\nthen\r\n    die \"xargs is not available\"\r\nfi\r\n\r\n# Use \"xargs\" to parse quoted args.\r\n#\r\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\r\n#\r\n# In Bash we could simply go:\r\n#\r\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\r\n#   set -- \"${ARGS[@]}\" \"$@\"\r\n#\r\n# but POSIX shell has neither arrays nor command substitution, so instead we\r\n# post-process each arg (as a line of input to sed) to backslash-escape any\r\n# character that might be a shell metacharacter, then use eval to reverse\r\n# that process (while maintaining the separation between arguments), and wrap\r\n# the whole thing up as a single \"set\" statement.\r\n#\r\n# This will of course break if any of these variables contains a newline or\r\n# an unmatched quote.\r\n#\r\n\r\neval \"set -- $(\r\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\r\n        xargs -n1 |\r\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\r\n        tr '\\n' ' '\r\n    )\" '\"$@\"'\r\n\r\nexec \"$JAVACMD\" \"$@\"\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew b/gradlew
--- a/gradlew	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/gradlew	(date 1731574894766)
@@ -15,6 +15,8 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
+# SPDX-License-Identifier: Apache-2.0
+#
 
 ##############################################################################
 #
@@ -55,7 +57,7 @@
 #       Darwin, MinGW, and NonStop.
 #
 #   (3) This script is generated from the Groovy template
-#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
 #       within the Gradle project.
 #
 #       You can find Gradle at https://github.com/gradle/gradle/.
@@ -83,7 +85,9 @@
 # This is normally unused
 # shellcheck disable=SC2034
 APP_BASE_NAME=${0##*/}
-APP_HOME=$( cd "${APP_HOME:-./}" && pwd -P ) || exit
+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)
+APP_HOME=$( cd -P "${APP_HOME:-./}" > /dev/null && printf '%s
+' "$PWD" ) || exit
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD=maximum
@@ -144,7 +148,7 @@
     case $MAX_FD in #(
       max*)
         # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
-        # shellcheck disable=SC3045
+        # shellcheck disable=SC2039,SC3045
         MAX_FD=$( ulimit -H -n ) ||
             warn "Could not query maximum file descriptor limit"
     esac
@@ -152,7 +156,7 @@
       '' | soft) :;; #(
       *)
         # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
-        # shellcheck disable=SC3045
+        # shellcheck disable=SC2039,SC3045
         ulimit -n "$MAX_FD" ||
             warn "Could not set maximum file descriptor limit to $MAX_FD"
     esac
@@ -201,11 +205,11 @@
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
 DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
 
-# Collect all arguments for the java command;
-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of
-#     shell script including quotes and variable substitutions, so put them in
-#     double quotes to make sure that they get re-expanded; and
-#   * put everything else in single quotes, so that it's not re-expanded.
+# Collect all arguments for the java command:
+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,
+#     and any embedded shellness will be escaped.
+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be
+#     treated as '${Hostname}' itself on the command line.
 
 set -- \
         "-Dorg.gradle.appname=$APP_BASE_NAME" \
Index: src/screen/StartScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/screen/StartScreen.java b/src/main/java/com/screen/StartScreen.java
rename from src/screen/StartScreen.java
rename to src/main/java/com/screen/StartScreen.java
--- a/src/screen/StartScreen.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/screen/StartScreen.java	(date 1731580057204)
@@ -1,13 +1,15 @@
-package src.screen;
+package com.screen;
 
-import src.screen.interfaces.Screen;
-import src.main.MainController;
+
+import com.app.MainController;
 
 import javax.swing.*;
 import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 
+import com.screen.interfaces.Screen;
+
 public class StartScreen extends JPanel implements Screen {
 
     private MainController mainController;
Index: src/screen/StoreScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/screen/StoreScreen.java b/src/main/java/com/screen/StoreScreen.java
rename from src/screen/StoreScreen.java
rename to src/main/java/com/screen/StoreScreen.java
--- a/src/screen/StoreScreen.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/screen/StoreScreen.java	(date 1731580057209)
@@ -1,10 +1,13 @@
-package src.screen;
+package com.screen;
+
 
-import src.screen.interfaces.Screen;
-import src.main.MainController;
+
+import com.app.MainController;
 
 import javax.swing.*;
 
+import com.screen.interfaces.Screen;
+
 public class StoreScreen extends JPanel implements Screen {
 
     private MainController mainController;
Index: src/screen/SettingScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/screen/SettingScreen.java b/src/main/java/com/screen/SettingScreen.java
rename from src/screen/SettingScreen.java
rename to src/main/java/com/screen/SettingScreen.java
--- a/src/screen/SettingScreen.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/screen/SettingScreen.java	(date 1731580057178)
@@ -1,13 +1,15 @@
-package src.screen;
+package com.screen;
 
-import src.screen.interfaces.Screen;
-import src.main.MainController;
+
+import com.app.MainController;
 
 import javax.swing.*;
 import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 
+import com.screen.interfaces.Screen;
+
 public class SettingScreen extends JPanel implements Screen {
 
     private MainController mainController;
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>distributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-8.10-bin.zip\r\nnetworkTimeout=10000\r\nvalidateDistributionUrl=true\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
--- a/gradle/wrapper/gradle-wrapper.properties	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/gradle/wrapper/gradle-wrapper.properties	(date 1731574894705)
@@ -4,4 +4,4 @@
 networkTimeout=10000
 validateDistributionUrl=true
 zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
\ No newline at end of file
+zipStorePath=wrapper/dists
Index: src/item/interfaces/Item.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/item/interfaces/Item.java b/src/main/java/com/item/interfaces/Item.java
rename from src/item/interfaces/Item.java
rename to src/main/java/com/item/interfaces/Item.java
--- a/src/item/interfaces/Item.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/item/interfaces/Item.java	(date 1731580057171)
@@ -1,4 +1,4 @@
-package src.item.interfaces;
+package com.item.interfaces;
 
 public interface Item {
 
Index: src/item/Sword.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/item/Sword.java b/src/main/java/com/item/Sword.java
rename from src/item/Sword.java
rename to src/main/java/com/item/Sword.java
--- a/src/item/Sword.java	(revision 244d2f4d8a8eb8abcd45060927d6696caf04e6b0)
+++ b/src/main/java/com/item/Sword.java	(date 1731580057186)
@@ -1,4 +1,4 @@
-package src.item;
+package com.item;
 
 public class Sword {
     private int getPrice;
